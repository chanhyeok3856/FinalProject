plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.github.node-gradle.node' version '3.2.1'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'com.oracle.database.jdbc:ojdbc8:21.5.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.hibernate:hibernate-core:6.5.2.Final'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

node {
    version = '16.0.0'
    npmVersion = '7.10.0'
    download = true
}

task buildFrontend(type: NpmTask) {
    dependsOn npmInstall
    args = ['run', 'build']
    workingDir = file('frontend')
}

bootJar {
    dependsOn buildFrontend
    from('frontend/build') {
        into 'static'
    }
}
//ss